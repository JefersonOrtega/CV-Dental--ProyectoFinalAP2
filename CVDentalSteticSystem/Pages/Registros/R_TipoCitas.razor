@page "/TiposCitas"

@using CVDentalSteticSystem.BLL


@inject IToastService toast
@inject AuthenticationStateProvider AuthenticationStateProvider

<AuthorizeView>


    <NotAuthorized>
        <p class="display-4 text-center">Usted no esta autorizado para acceder a esta pagina</p>

    </NotAuthorized>

    <Authorized>
        @if (!EsAutorizado)
        {
            <p class="display-3 text-center">Usted no tiene el nivel necesario para acceder a esta pagina</p>
        }
    </Authorized>

</AuthorizeView>

@if (AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.Identity.IsAuthenticated
 && EsAutorizado)
{
    <EditForm Model="tipoCita" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />
        <div class="card">
            <div class="card-header">
                <h3>Registro de Tipos de Citas</h3>
            </div>

            <div class="card-body">
                <form>
                    @*TipoCitaId*@
                    <div class="form-row align-items-center">
                        <div class="col">
                            <div class="form-group">
                                <label>Tipo Cita Id</label>
                                <div class="input-group">
                                    <InputNumber @bind-Value="tipoCita.TipoCitaId" class="form-control col-4" min="0"/>
                                    <div class="input-group-append">
                                        <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">Buscar</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    @*Nombre Tipo de Cita*@
                    <div class="form-group">
                        <label>Nombre del tipo de cita</label>
                        <InputText @bind-Value="tipoCita.Nombre" class="form-control" />
                        <ValidationMessage For="@(() => tipoCita.Nombre)" />
                    </div>

                    @*Descripcion*@
                    <div class="form-group">
                        <label>Descripción</label>
                        <InputText @bind-Value="tipoCita.Descripcion" class="form-control" />
                        <ValidationMessage For="@(() => tipoCita.Descripcion)" />
                    </div>
                </form>

            </div>

            <div class="card-footer">
                <div class="form-group text-center" display: in line-block>
                    <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
                    <button type="submit" class="btn btn-lg btn-success">Guardar</button>
                    <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
                </div>
            </div>
        </div>
    </EditForm>
}

@code{
    [Parameter]
    public int TipoCitaId { get; set; }

    private TipoCitas tipoCita = new TipoCitas();

    public bool EsAutorizado = false;

    protected override void OnInitialized()
    {
        Nuevo();

        Buscar();

        if (AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.IsInRole("Administrador") ||
            AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.IsInRole("Normal"))
        {
            EsAutorizado = true;
        }
    }

    public void Nuevo()
    {
        tipoCita = new TipoCitas();
    }

    private void Buscar()
    {
        if (tipoCita.TipoCitaId > 0)
        {
            var encontrado = TipoCitasBLL.Buscar(tipoCita.TipoCitaId);
            if (encontrado != null)
                this.tipoCita = encontrado;
            else
            {
                toast.ShowWarning("No Encontrado");
                Nuevo();
            }
        }
    }

    public void Guardar()
    {
        bool guardo;
        guardo = TipoCitasBLL.Guardar(tipoCita);

        if (guardo)
        {
            Nuevo();
            toast.ShowSuccess("Guardado Correctamente");
        }
        else
        {
            toast.ShowError("No fue Posible Guardar");
        }
    }

    public void Eliminar()
    {
        bool elimino;
        elimino = TipoCitasBLL.Eliminar(tipoCita.TipoCitaId);

        if (elimino)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado Correctamente");
        }
        else
            toast.ShowError("No fue posible eliminar");
    }

}
