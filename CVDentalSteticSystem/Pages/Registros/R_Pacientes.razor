@page "/Pacientes"

@using CVDentalSteticSystem.BLL

@inject IToastService toast
@inject AuthenticationStateProvider AuthenticationStateProvider

<AuthorizeView>


    <NotAuthorized>
        <p class="display-4 text-center">Usted no esta autorizado para acceder a esta pagina</p>

    </NotAuthorized>

    <Authorized>
        @if (!EsAutorizado)
        {
            <p class="display-3 text-center">Usted no tiene el nivel necesario para acceder a esta pagina</p>
        }
    </Authorized>

</AuthorizeView>

@if (AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.Identity.IsAuthenticated
   && EsAutorizado)
{
    <EditForm Model="Paciente" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />
        <div class="card">
            <div class="card-header">
                <h3>Registro de Pacientes</h3>
            </div>

            <div class="card-body">
                <form>
                    @*PacienteId*@
                    <div class="form-row align-items-center">
                        <div class="col">
                            <div class="form-group">
                                <label>Paciente Id</label>
                                <div class="input-group">
                                    <InputNumber @bind-Value="Paciente.PacienteId" class="form-control col-4" />
                                    <div class="input-group-append">
                                        <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">Buscar</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    @*Nombres*@
                    <div class="form-group">
                        <label>Nombres</label>
                        <InputText @bind-Value="Paciente.Nombres" class="form-control" />
                        <ValidationMessage For="@(()=>Paciente.Nombres)" />
                    </div>

                    @*Apellidos*@
                    <div class="form-group">
                        <label>Apellidos</label>
                        <InputText @bind-Value="Paciente.Apellidos" class="form-control" />
                        <ValidationMessage For="@(()=>Paciente.Apellidos)" />
                    </div>

                    @*Direccion*@
                    <div class="form-group">
                        <label>Dirección</label>
                        <InputText @bind-Value="Paciente.Direccion" class="form-control" />
                        <ValidationMessage For="@(()=>Paciente.Direccion)" />
                    </div>

                    @*Telefono*@
                    <div class="form-group">
                        <label>Teléfono</label>
                        <InputText @bind-Value="Paciente.Telefono" class="form-control" placeholder="809-000-0000" />
                        <ValidationMessage For="@(()=>Paciente.Telefono)" />
                    </div>

                    @*Email*@
                    <div class="form-group">
                        <label>Email</label>
                        <InputText type="email" @bind-Value="Paciente.Email" class="form-control" placeholder="Correo Electronico" />
                        <ValidationMessage For="@(()=>Paciente.Email)" />
                    </div>

                    @*Genero*@
                    <div class="form-group">
                        <label>Genero</label>
                        <InputSelect @bind-Value="Paciente.Genero" class="form-control">
                            <option value="Femenino">Femenino</option>
                            <option value="Masculino">Masculino</option>
                        </InputSelect>
                        <ValidationMessage For="@(()=>Paciente.Genero)" />
                    </div>

                    @*Fecha de Nacimineot*@
                    <div class="form-group">
                        <label>Fecha de Nacimiento</label>
                        <InputDate @bind-Value="Paciente.FechaNacimiento" class="form-control" />
                    </div>

                    @*Seguro Medico*@
                    <div class="form-group">
                        <label>Seguro Médico</label>
                        <InputText @bind-Value="Paciente.SeguroMedico" class="form-control" />
                    </div>

                    @*Alergias*@
                    <div class="form-group">
                        <label>Alergias</label>
                        <InputTextArea @bind-Value="Paciente.Alergias" class="form-control" />
                    </div>

                    @*Balance*@
                    <div class="form-group">
                        <label>Balance</label>
                        <InputNumber readOnly @bind-Value="Paciente.Balance" class="form-control" />
                    </div>

                </form>

            </div>

            <div class="card-footer">
                <div class="form-group text-center" display: in line-block>
                    <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
                    <button type="submit" class="btn btn-lg btn-success">Guardar</button>
                    <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
                </div>
            </div>
        </div>
    </EditForm>
}

@code {
    [Parameter]
    public int PacienteId { get; set; }

    private Pacientes Paciente = new Pacientes();
    public bool EsAutorizado = false;

    protected override void OnInitialized()
    {
        Nuevo();

        Buscar();

        if (AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.IsInRole("Administrador") || 
            AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.IsInRole("Normal"))
        {
            EsAutorizado = true;
        }
    }

    public void Nuevo()
    {
        Paciente = new Pacientes();
    }

    private void Buscar()
    {
        if (Paciente.PacienteId > 0)
        {
            var encontrado = PacientesBLL.Buscar(Paciente.PacienteId);

            if (encontrado != null)
                this.Paciente = encontrado;
            else
                toast.ShowWarning("No encontrado");
        }
    }

    public void Guardar()
    {
        bool guardo;
        guardo = PacientesBLL.Guardar(Paciente);

        if (guardo)
        {
            Nuevo();
            toast.ShowSuccess("Guardado Correctamente");
        }
        else
        {
            toast.ShowError("No fue Posible Guardar");
        }
    }

    public void Eliminar()
    {
        bool elimino;
        elimino = PacientesBLL.Eliminar(Paciente.PacienteId);

        if (elimino)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado Correctamente");
        }
        else
            toast.ShowError("No fue posible eliminar");
    }

}
