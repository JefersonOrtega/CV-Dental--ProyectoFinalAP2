@page "/ConsultaProcedimientos"

@using CVDentalSteticSystem.BLL

@inject AuthenticationStateProvider AuthenticationStateProvider

<AuthorizeView>


    <NotAuthorized>
        <p class="display-4 text-center">Usted no esta autorizado para acceder a esta pagina</p>

    </NotAuthorized>

    <Authorized>
        @if (!EsAutorizado)
        {
            <p class="display-3 text-center">Usted no tiene el nivel necesario para acceder a esta pagina</p>
        }
    </Authorized>

</AuthorizeView>

@if (AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.Identity.IsAuthenticated
&& EsAutorizado)
{
    <div class="card">
        <div class="card-header">
            <h3>Consulta de Procedimientos</h3>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="form-group col-4">
                    <label>Filtro: </label>
                    <select @bind="eleccion" class="form-control  col-4" placeholder="Seleccione un Filtro">
                        <option value="0">Todo</option>
                        <option value="1">Id</option>
                        <option value="2">Paciente</option>
                        <option value="3">Tipo de Procedimiento</option>
                        <option value="4">En Proceso</option>
                        <option value="5">Concluidos</option>
                        <option value="6">Cobrados</option>
                        <option value="7">No Cobrados</option>

                    </select>
                </div>

                <div class="form-group   col-6">
                    <label>Criterio</label>
                    <div class="input-group">



                       @* @if (eleccion == "2")
                        {
                            <InputSelectNumber @bind-Value="PacienteSelecionado.PacienteId" class="form-control">
                                <option value="" disabled selected>Seleccione un Paciente</option>
                                @foreach (var auxiliar in CargarPacientes())
                                {
                                    <option value="@auxiliar.PacienteId">@auxiliar.Nombres @auxiliar.Apellidos</option>
                                }
                            </InputSelectNumber>
                            
                        }
                        else
                        {
                            
                        }*@
                    <input type="text" @bind="criterio" class="form-control" />





                        <div class="input-group-append">
                            <button class="btn btn-primary" @onclick="Consultar">Consultar</button>
                        </div>
                    </div>
                </div>
            </div>
            <table class="table">
                <thead>
                    <tr>
                        <th>Procedimiento Id</th>
                        <th>Paciente</th>
                        <th>Tipo de Procedimiento</th>
                        <th>Estado</th>
                        <th>Monto</th>
                        <th>Es Cobrado</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in listaProcedimientos)
                    {
                        <tr>
                            <td>@item.ProcedimientoId</td>
                            <td>@BuscarPaciente(item.PacienteId).Nombres @BuscarPaciente(item.PacienteId).Apellidos</td>
                            <td>@BuscarTipoProcedimiento(item.TipoProcedimientoId).NombreProcedimiento</td>
                            <td>@item.Estado</td>
                            <td>@item.Monto</td>
                            <td>@item.EsCobrado</td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>
        <div class="card-footer">
            <div class="form-group">
                <label>Total Sin Cobrar</label>
                <input type="text" readonly @bind="TotalSinCobrar" class="form-control" />
            </div>
        </div>
    </div>
}

@code {

    List<Procedimientos> listaProcedimientos = new List<Procedimientos>();
    private string eleccion;
    private string criterio;
    public bool EsAutorizado = false;
    public decimal TotalSinCobrar = 0;
   // private Pacientes PacienteSelecionado = new Pacientes();






    protected override void OnInitialized()
    {
        listaProcedimientos = ProcedimientosBLL.GetList(x => true);
        ObtenerTotalSinCobrar(listaProcedimientos);

        if (AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.IsInRole("Administrador") ||
            AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.IsInRole("Normal"))
        {
            EsAutorizado = true;
        }

    }


    public List<Pacientes> CargarPacientes()
    {
        List<Pacientes> lista = new List<Pacientes>();

        try
        {
            lista = PacientesBLL.GetPacientes();
        }
        catch (Exception)
        {
            throw;
        }

        return lista;
    }


    private void Consultar()
    {
        int seleccion = Convert.ToInt32(eleccion);
        if (eleccion == "2")
            criterio = Convert.ToString(PacienteSelecionado.PacienteId);

        if (criterio.Trim().Length > 0)
        {
            switch (seleccion)
            {
                case 0:
                    {
                        listaProcedimientos = ProcedimientosBLL.GetList(x => true);
                        ObtenerTotalSinCobrar(listaProcedimientos);
                        break;
                    }
                case 1: //id
                    {
                        int id = int.Parse(criterio);
                        listaProcedimientos = ProcedimientosBLL.GetList(p => p.PacienteId == id);
                        ObtenerTotalSinCobrar(listaProcedimientos);
                        break;

                    }
                case 2: //Paciente
                    {
                        int id = int.Parse(criterio);
                        listaProcedimientos = ProcedimientosBLL.GetList(p => p.PacienteId == id);
                        ObtenerTotalSinCobrar(listaProcedimientos);
                        break;
                    }
                case 3: //Tipo de Procedimiento
                    {
                        int id = int.Parse(criterio);
                        listaProcedimientos = ProcedimientosBLL.GetList(p => p.TipoProcedimientoId == id);
                        ObtenerTotalSinCobrar(listaProcedimientos);
                        break;
                    }
                case 4: //En Proceso
                    {
                        listaProcedimientos = ProcedimientosBLL.GetList(p => p.Estado.ToLower() == "en proceso");
                        ObtenerTotalSinCobrar(listaProcedimientos);
                        break;
                    }
                case 5: //Concluidos
                    {
                        listaProcedimientos = ProcedimientosBLL.GetList(p => p.Estado.ToLower() == "concluido");
                        ObtenerTotalSinCobrar(listaProcedimientos);
                        break;
                    }
                case 6: //No Cobrados
                    {
                        listaProcedimientos = ProcedimientosBLL.GetList(p => p.EsCobrado == false);
                        ObtenerTotalSinCobrar(listaProcedimientos);
                        break;
                    }
            }
        }
        else
        {
            listaProcedimientos = ProcedimientosBLL.GetList(x => true);
            ObtenerTotalSinCobrar(listaProcedimientos);
        }
    }

    public Pacientes BuscarPaciente(int id)
    {
        return PacientesBLL.Buscar(id);
    }

    public TiposProcedimientos BuscarTipoProcedimiento(int id)
    {
        return TiposProcedimientosBLL.Buscar(id);
    }

    public void ObtenerTotalSinCobrar(List<Procedimientos> lista)
    {
        TotalSinCobrar = 0;
        foreach (var item in lista)
        {
            if (item.EsCobrado == false)
                TotalSinCobrar += item.Monto;
        }
    }
}